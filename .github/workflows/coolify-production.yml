name: Production Build and Deployment

on: 
  push:
    branches: ["main"]

env: 
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  COOLIFY_WEBHOOK: ${{vars.COOLIFY_WEBHOOK}}
  COOLIFY_TOKEN: ${{vars.COOLIFY_TOKEN}}
  DATABASE_URI: ${{vars.PROD_DATABASE_URI}}
  PAYLOAD_SECRET: ${{vars.PAYLOAD_SECRET}}
  PAYLOAD_PUBLIC_SERVER_URL: ${{vars.PAYLOAD_PUBLIC_SERVER_URL }}
  NEXT_PUBLIC_SERVER_URL: ${{vars.NEXT_PUBLIC_SERVER_URL}}
  NEXT_PUBLIC_IS_LIVE: ${{vars.NEXT_PUBLIC_IS_LIVE}}
  PAYLOAD_PUBLIC_DRAFT_SECRET: ${{vars.PAYLOAD_PUBLIC_DRAFT_SECRET}}
  NEXT_PRIVATE_DRAFT_SECRET: ${{vars.NEXT_PRIVATE_DRAFT_SECRET}}
  REVALIDATION_KEY: ${{vars.REVALIDATION_KEY}}
  NEXT_PRIVATE_REVALIDATION_KEY: ${{vars.NEXT_PRIVATE_REVALIDATION_KEY}}
  RESEND_API_KEY: ${{vars.RESEND_API_KEY}}
  R2_ENDPOINT: ${{vars.R2_ENDPOINT}}
  R2_ACCESS_KEY_ID: ${{vars.R2_ACCESS_KEY_ID}}
  R2_SECRET_ACCESS_KEY: ${{vars.R2_SECRET_ACCESS_KEY}}
  R2_BUCKET: ${{vars.R2_BUCKET}}
  R2_TOKEN: ${{vars.R2_TOKEN}}
jobs: 
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate .env File
        run: |
          # Create .env file from environment variable
          cat <<EOF > .env
          DATABASE_URI: ${{env.PROD_DATABASE_URI}}
          PAYLOAD_SECRET: ${{env.PAYLOAD_SECRET}}
          PAYLOAD_PUBLIC_SERVER_URL: ${{env.PAYLOAD_PUBLIC_SERVER_URL }}
          NEXT_PUBLIC_SERVER_URL: ${{env.NEXT_PUBLIC_SERVER_URL}}
          NEXT_PUBLIC_IS_LIVE: ${{env.NEXT_PUBLIC_IS_LIVE}}
          PAYLOAD_PUBLIC_DRAFT_SECRET: ${{env.PAYLOAD_PUBLIC_DRAFT_SECRET}}
          NEXT_PRIVATE_DRAFT_SECRET: ${{env.NEXT_PRIVATE_DRAFT_SECRET}}
          REVALIDATION_KEY: ${{env.REVALIDATION_KEY}}
          NEXT_PRIVATE_REVALIDATION_KEY: ${{env.NEXT_PRIVATE_REVALIDATION_KEY}}
          RESEND_API_KEY: ${{env.RESEND_API_KEY}}
          R2_ENDPOINT: ${{env.R2_ENDPOINT}}
          R2_ACCESS_KEY_ID: ${{env.R2_ACCESS_KEY_ID}}
          R2_SECRET_ACCESS_KEY: ${{env.R2_SECRET_ACCESS_KEY}}
          R2_BUCKET: ${{env.R2_BUCKET}}
          R2_TOKEN: ${{env.R2_TOKEN}}
          NODE_ENV=production
          EOF

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GHCR_TOKEN}}         

      - name: Build and Push Container to Registry
        uses: docker/build-push-action@v4
        with: 
          context: .
          file: Dockerfile.webapp
          platforms: linux/amd64
          push: true
          tags: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:latest

      - name: Deploy to Coolify
        run: |
          curl --request GET '${{ env.COOLIFY_WEBHOOK }}' --header 'Authorization: Bearer ${{ env.COOLIFY_TOKEN }}'